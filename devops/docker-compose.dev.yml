services:
  redis:
    container_name: appname-redis-dev
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  web:
    container_name: appname-web-dev
    build:
      context: ..
      dockerfile: devops/Dockerfile
    env_file:
      - .env.dev
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - ..:/app/
    entrypoint: ["/app/devops/scripts/startup.sh"]

  db:
    container_name: appname-db-dev
    image: postgres:16
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: ${POSTGRES_HOST}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  redis_data:
  postgres_data:
